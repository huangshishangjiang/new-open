#! bin/bash
# -*- coding: utf-8 -*-
"""
@version: python3.8
@author: chengbochao
@software: dbapiservice
@file: jq_edit_web.py
@time: 2023/1/15 13:01 
"""
import os
import sys

from Tool.logTool import Loggingfile

path = os.path.abspath(__file__).split('dbapiservice', -1)[0] + 'dbapiservice'
sys.path.append(path)
from pywebio.input import *
from pywebio.output import *
import pywebio
from Tasks.real_time_task.real_task_jcj_spider import JcjSpider
from Tasks.real_time_task.real_task_jjd_jjd_sthy import get_jq_data
from Tool.dbTool import Conn
from Tool.logTool import logTime
from conf.conf_jq_edit_web import conf as jq_conf

mysql_conn = Conn('wd_8', 'mysql')
es_conn = Conn()

jcjspier = JcjSpider()


class JqEdit:

    def __init__(self):
        self.return_main = False
        self.ip = None
        self.ssh = None
        self.user_ip = None
        self.log = Loggingfile(logfilename='jq_edit',
                               logfilepath=path + '/../logs_dbapiservice/real_task_log/jq_edit/',
                               codename=__file__.split('/')[-1].split('.')[0],
                               console=True,
                               timedrotat=True,
                               backupCount=10  # 备份最大10份
                               )
        self.sqm = None
        self.sqm_err_count = 0

    def log_rec(self, content):
        self.log.send_log(self.user_ip + ' ' + str(content))

    def check_sqm(self, sqm):
        if sqm not in [708090, 110110]:
            self.sqm_err_count += 1
            if self.sqm_err_count >= 5:
                while True:
                    return "授权码错误. 已错误" + str(self.sqm_err_count) + '次. 错误5次将禁止访问'
            return "授权码错误. 已错误" + str(self.sqm_err_count) + '次. 错误5次将禁止访问'

    def check_jjdbh(self, jjdbh: str):
        if len(jjdbh.strip()) < 5:
            return "输入错误，请确认"
        if len(jjdbh) < 30:
            jcjspier.bjdh = jjdbh
        else:
            jcjspier.sjbh = jjdbh
        if self.get_jq(jjdbh=jcjspier.sjbh, bjdh=jcjspier.bjdh):
            return "警情已存在, 不能补充。"

    @staticmethod
    def get_jq(**args):
        item = {'jjdbh': None, 'bjdh': None}
        if args.get('jjdbh'):
            item['jjdbh'] = args.get('jjdbh')
            es_res = es_conn.searches(indexname='jcj_release_jjd_sthy', column='jjdbh', columnvalue=args.get('jjdbh'))
        else:
            item['bjdh'] = args.get('bjdh')
            es_res = es_conn.searches(indexname='jcj_release_jjd_sthy', column='bjdh', columnvalue=args.get('bjdh'))
        if es_res:
            row = es_res[0]['_source']
            jq_tp = int(float(row['jq_analysis_type']))
            put_table([['报警时间', '报警电话', '报警内容', '警情识别类型'],
                       [logTime(timestamp=row['bjsj'])[:-1], row['bjdh'], row['bjnr'],
                        '一般警情' if jq_tp == 10 else '通知通告']],
                      scope='display')
            return es_res
        else:
            jcjspier.jjdbh, jcjspier.bjdh = item['jjdbh'], item['bjdh']
            row = jcjspier.put_mysql(jcjspier.html_anys(jcjspier.get_data()))
            if not row:
                return None
            else:
                get_jq_data(sthySpiderData=False,writeMysql=True,writeEs=True)
                put_text("补警情数: " + str(row), scope='display')
                return True

    def add_jjd(self):
        clear('display')
        use_scope('operation')
        input('请输入“报警电话”或“接警单编号”', validate=self.check_jjdbh)
        reqtext = jcjspier.html_anys(jcjspier.get_data())
        jcjspier.jq_analysis_type = 17
        jcjspier.put_mysql(reqtext)
        self.log_rec('手动新增警情:' + str(jcjspier.sjbh))
        self.log_rec('-----------------------------------------------\n')
        put_text(
            "接警单补充已提交:" + jcjspier.sjbh or jcjspier.bjdh + "  补充警情结果如下： （若警情仍不显示，请确认警情分析类型非通知、协查类。）",
            scope="display")
        if self.get_jq(jjdbh=jcjspier.sjbh, bjdh=jcjspier.bjdh):
            put_text("成功。补警情完成。", scope='display')
        else:
            put_text("失败。请确认三天内存在该警情，或其他异常。", scope='display')

    @staticmethod
    def del_jq():
        clear('display')
        put_text('请输入要删除的接警单编号', scope='display')
        jjdbh = input("请输入执行删除的接警单编号", placeholder="接警单编号 或 三台合一事件单编号", required=True)
        opt = select('请确认是否删除警情:' + jjdbh, options=['取消删除', '确认删除'])
        if opt == '确认删除':
            put_text('开始删除操作: 接警单编号' + jjdbh, scope='display')
            mysql_conn.mysqlinsert(f"update jcj_release.jjd_jjd_sthy set jq_analysis_type=40 where jjdbh='{jjdbh}';")
            es_conn.esupdatebyquery(indexname='jcj_release_jjd_sthy', oldkv={'jjdbh': jjdbh},
                                    updatekv={"jq_analysis_type": 40})
            put_text('接警单编号' + jjdbh + ' 已标记删除。', scope='display')
            put_text('如需撤销删除操作，请使用【变更警情识别类型】功能，改警情识别类型为[15]', scope='display')
        else:
            put_text('取消删除操作: 接警单编号' + jjdbh, scope='display')

    @staticmethod
    def chg_jq_type():
        clear('display')
        put_text('系统根据接警单涉及的《相关指令单》数量自动判断接警单类型:', scope='display')
        put_text("警情分析类型:", scope='display')
        put_table([["类型码值", "类型描述", "是否展示"],
                   [10, "正常警情（默认）", '是'],
                   [15, "手动变更警情识别类型", '是'],
                   [17, "手动补充的警情", '是'],
                   [20, "识别为通知通告或协查通报 (警情详情指令单数大于10 或 报警电话不是'86847110', '86848110', '86849110'", '否'],
                   [30, "交警三大队警情", '否'],
                   [40, "手动删除的警情", '否']
                   ], scope='display')
        put_text("请在下方输入接警单编号后以继续操作", scope='display')
        use_scope('operation')
        jjdbh = input("请输入接警单编号", placeholder="接警单编号 或 三台合一事件单编号", required=True)
        jq_type = select("请选择接警单识别类型", options=[10, 15, 17, 20, 30, 40])
        put_text(f"接警单编号：{jjdbh}， 变更警情识别类型：{jq_type}", scope='display')
        mysql_conn.mysqlinsert(
            f"update jcj_release.jjd_jjd_sthy set jq_analysis_type={int(jq_type)} where jjdbh = '{str(jjdbh)}'")
        es_conn.esupdatebyquery(indexname='jcj_release_jjd_sthy', oldkv={"jjdbh": jjdbh},
                                updatekv={"jq_analysis_type": int(jq_type)})
        put_text("任务已提交，立即生效。", scope='display')

    def chg_jq_attr(self):
        clear('display')
        self.log_rec('警情属性变更。')
        put_text('请在下方输入要变更的接警单信息', scope='display')
        g_data = input_group('变更接警单信息',
                             [
                                 input('请输入接警单编号', required=True, name='jjdbh'),
                                 select('选择要变更的项目', options=[
                                     '报警电话',
                                     '报警内容',
                                     '案发地点',
                                     '管辖单位名称',
                                     '---变更其他属性请联系管理员---'
                                 ], required=True, name='col_name'),
                                 input('请输入变更后的内容', required=True, name='col_value')
                             ])
        put_text('变更任务已提交.' + str(g_data), scope='display')
        self.log_rec(g_data)
        updatakv = {}
        if g_data['col_name'] == '报警电话':
            updatakv = {'bjdh': g_data['col_value']}
        elif g_data['col_name'] == '报警内容':
            updatakv = {'bjnr': g_data['col_value']}
        elif g_data['col_name'] == '案发地点':
            updatakv = {'afdd': g_data['col_value']}
        elif g_data['col_name'] == '管辖单位名称':
            updatakv = {'gxdwdm': g_data['col_value']}
        else:
            pass
        es_conn.esupdatebyquery(indexname='jcj_release_jjd_sthy',
                                oldkv={'jjdbh': g_data['jjdbh']},
                                updatekv=updatakv)
        k, v = None, None
        for item in updatakv.items():
            k, v = item
        sql = f"update jcj_release.jjd_jjd_sthy set {k} = '{v}' where jjdbh = '{g_data['jjdbh']}';"
        mysql_conn.mysqlinsert(sql)
        put_text("变更完成。", scope='display')

    @staticmethod
    def chg_source_code():
        clear('display')
        put_text('支持系统:', scope='display')
        sys_list = []
        for system in jq_conf['chg_source_code']['system']:
            name = jq_conf['chg_source_code'][system]['name']
            put_text(name, scope='display')
            sys_list.append(name)
        chg_g_data = input_group(
            '请选择',
            [select('选择系统', options=sys_list, name='sys_op'),
             select('选择功能', options=[{'label': '上传新版【前端】包并生效', 'value': 0},
                                     {'label': '回退历史【前端】包并生效', 'value': 1},
                                     {'label': '上传新版【后端】包并生效', 'value': 2},
                                     {'label': '回退历史【后端】包并生效', 'value': 3},
                                     {'label': '仅查看包版本', 'value': 4},
                                     ], name='item_op'),
             select('是否应用于环境', options=[{'label': '仅生产环境部署', 'value': 0},
                                        {'label': '仅测试环境部署', 'value': 1},
                                        {'label': '生产/测试同时部署', 'value': 2},
                                        {'label': '仅上传源代码包不部署', 'value': 3},
                                        {'label': '查看当前【前端】包版本', 'value': 4},
                                        {'label': '查看当前【后端】包版本', 'value': 5}
                                        ],
                    name='process_op')
             ]
        )
        if chg_g_data['item_op'] == 0:
            source_code_file = file_upload('选择代码文件并上传', required=True)
            source_code_file['file_name'].save('')
        pass

    def main(self):
        self.user_ip = pywebio.session.info.user_ip
        self.log.send_log('\n============')
        self.log_rec('进入用户访问:' + self.user_ip)
        with use_scope("check"):
            input("请输入授权码", type=NUMBER, validate=self.check_sqm,
                  required=True)
        put_table([[
            put_button('接警单补充[三天内]', onclick=lambda: self.add_jjd()),
            put_button('变更警情识别类型', onclick=lambda: self.chg_jq_type()),
            put_button('删除警情', color="warning", onclick=lambda: self.del_jq()),
            put_button('变更接警单相关属性', color="info", onclick=lambda: self.chg_jq_attr()),
            put_button('情指勤舆前/后端代码更新', color="info", onclick=lambda: self.chg_source_code())
        ]]
        )
        put_scrollable(put_scope('display'), height=600, keep_bottom=True)
        toast('系统采集全量操作日志。您当前的客户机IP:' + self.user_ip,
              duration=5, position='left', color='warn')


if __name__ == '__main__':
    jqedit = JqEdit()
    pywebio.start_server(jqedit.main, port=3030, host='0.0.0.0', debug=True)
